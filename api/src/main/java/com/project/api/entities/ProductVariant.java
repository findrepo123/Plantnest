package com.project.api.entities;
// Generated Jul 25, 2023, 8:08:56 PM by Hibernate Tools 4.3.6.Final

import lombok.Data;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * ProductVariant generated by hbm2java
 */

@Getter
@Setter
@Entity
@Table(name = "`product_variant`")
public class ProductVariant implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "product_variant_id", unique = true, nullable = false)
	private Integer productVariantId;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "image_id")
	private Image image;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	private Product product;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "size_id", nullable = false)
	private ProductSize productSize;

	@Column(name = "height")
	private int height;

	@Column(name = "width")
	private int width;

	@Column(name = "quantity", nullable = false)
	private int quantity;

	@Column(name = "price", nullable = false, precision = 18)
	private BigDecimal price;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productVariant")
	private Set<CartDetail> cartDetails = new HashSet<CartDetail>(0);

	public ProductVariant() {
	}

	public ProductVariant(Product product, ProductSize productSize, int height, int width, int quantity,
			BigDecimal price) {
		this.product = product;
		this.height = height;
		this.width = width;
		this.productSize = productSize;
		this.quantity = quantity;
		this.price = price;
	}

	public ProductVariant(Image image, Product product, ProductSize productSize, int height, int width, int quantity,
			BigDecimal price, Set<CartDetail> cartDetails) {
		this.image = image;
		this.product = product;
		this.productSize = productSize;
		this.quantity = quantity;
		this.price = price;
		this.cartDetails = cartDetails;
	}

	@Override
	public int hashCode() {
		return Objects.hash(productVariantId);
	}

}
